Crea un programa que genere un laberinto aleatorio de tamaño *NxN* y luego encuentre 
la solución más corta desde una entrada en la *esquina superior izquierda (0,0)* hasta 
una salida en la *esquina inferior derecha (N-1,N-1)*. Debes implementar tanto la 
generación del laberinto como el algoritmo para resolverlo.

* Objetivo
** Generar un laberinto aleatorio:
    Utiliza un algoritmo de generación de laberintos como el algoritmo de Prim, 
    Kruskal, o DFS (Depth-First Search) para crear un laberinto con pasillos y 
    paredes.

** Encontrar la solución más corta:
    Implementa un algoritmo de búsqueda de caminos como BFS (Breadth-First Search)
    o A* para encontrar la ruta más corta desde la entrada hasta la salida, si se 
    usa un automata se dara 2 reps.

** Visualizar el laberinto y la solución:
    Muestra el laberinto generado y destaca la ruta encontrada. 

* Ejemplo
** Entrada
    Tamaño del laberinto como minimo de 9
    - 9 <= N

** Salida
    Laberinto generado 
    - 0: Path
    - 1: Wall
    - S: Start
    - E: End

@code
1  1  1  1  1  1  1
1  S  0  1  0  0  1
1  1  0  1  1  0  1
1  0  0  0  0  0  1
1  0  1  1  1  0  1
1  0  0  0  1  E  1
1  1  1  1  1  1  1

(1,1) -> (2,1) -> (3,1) -> (3,2) -> (3,3) -> (3,4) -> (4,4) ->  (5,4) -> (5,5) 
@end

@code

@end
